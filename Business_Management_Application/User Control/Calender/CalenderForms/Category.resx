<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAjCAYAAAAe2bNZAAAABGdBTUEAALGPC/xhBQAAA5ZJREFUWEfd
        mEev00AURkNvQnTWSCCaQHQQdU3fIBCwQtQtVYjee19QfwS98wNYAKKJIsoK+Af0fs4EBz8nThxeiBCf
        dPQ8jj0zvnPvnTsv97+oJeyDkzG2Q1Oou8bCD3gAt+HRr/YAqLsWwTdoE1q5XGdwMrND6y9oDEzIXxbp
        ILzIXxb0BnbkL4s0HkbnL6vXJPgA30F/iCwQ6Sqcy18WdA3O5y8LagGbQSt+gulQlaaCL56BlfAR7kF/
        6AdH4D3shLj2wDvQsXtCH7gD9rUKzoJ9TYFMGgXRRPwqNQQeg/e1lBNbA/pJXF1hE/isltCyT2EYKCMw
        mtAIb1TSYPgCW0Prt9rCepgWWuVleM+ELdDOGzHZr/07TiZFa5zmvH8qA+IrbAytjGoON+EltPdGDaSF
        nsEtiJY/s3qDPrIhtNLVDPQd/5aTIa/T9wqtKmUmNYkZ4qWko18CJ+xzOuVFGAmlNAdcoh6hVaWOgWFZ
        SgtAJ7wLS0FnXQZGmffnQ1I69XPYHVplZMiNg8VwGK6DYWmOSUqLOOBRSG6KLtVx8PdSoetG+hZMmAdg
        IejUDXxoL2hqzaiTnQZDsAMk5dJokbTd2Qm5eV4IrYbqBrvA39xKjFjHNVkWdAIeQuvQSpcD6RsuTTkt
        By1byandYhzX8QuyYRlQSWZYv2RGaKXL332uS2iVl+MWTcZ6pFNopSuyjM5aTisgi2Ucz3EbTGYb+CXy
        Ci6Dm2BHSMrwNWrSBjJhavrk7q26g9GkA7+GaEzHL0hnHAhzQQfTSdOiyTxitBg1yQk5kVPwGYZ7I6Eo
        mnRgxzH3OG5aMBRk6KblGfOIE7oPLol5xr9axPvzIKkozziJqhVl4MmhVSzziF+oD/mclnRpSllENSoD
        W0hp7nWhlS6/2L2pkqldIidswVWVWoGJzSLJOqYWcte20HLpzfiZdQg0vxVeLTUU3FgtSzPJgsrSUoeM
        y7rGosuCuok3ysglmwUuTbIesha2f08LFeXGpVWsVSNzesRwL/G+Hbn3rIVkkjTjWsU9gagG9r3oiBKv
        gR0nk6zefcGi3IRkFFj5WRj1BU8HDpSsk02Ung72g6cDn/c937cf+7NfTx9VaSI4oHnDrJksFW+Ancd1
        BczQcZkIV4ORqb9UfW6KZC4ZlL8sknWP5UZcbiVpSc1gSKsCG60loPmTZ22TW91lZejgyf9CuNfUXUaG
        FeI/8f+ZGiuX+wn9zN2WnTkAWQAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="idCat.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>